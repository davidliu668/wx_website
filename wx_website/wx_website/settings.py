"""
Django settings for wx_website project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import user_config

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7pio&-8=*v7bw7*b_ve+-nn=7g&=#2sa@^c+4tkvr-nv9*%t!k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = user_config.UC_ALLOWED_HOSTS


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'apps.expense',
    'apps.wxmp',
    'apps.gohome',
    'apps.happytea'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
#    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
)

ROOT_URLCONF = 'wx_website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wx_website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': user_config.UC_DB_NAME,
        'USER': user_config.UC_DB_USER,
        'PASSWORD': user_config.UC_DB_PASSWD,
        'HOST': '/var/lib/mysql/mysql.sock',
        'PORT': '3306',
    }
}

# django_crontab
CRONJOBS = [
    ('5 * * * *', 'apps.wxmp.crontab.get_app_token'),
    ('30 1 * * *', 'apps.happytea.view.bacup_to_cos'),
]

# memcached
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:12888',
    }
}

# cos
COS_APPID = user_config.UC_COS_APPID
COS_SECRET_ID = user_config.UC_COS_SECRET_ID
COS_SECRET_KEY = user_config.UC_COS_SECRET_KEY
COS_REGION = user_config.UC_COS_REGION

# log config
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'fmt_detail': {
            'format': '%(asctime)s %(levelname)s %(name)s %(funcName)s-%(lineno)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'fmt_simple': {
            'format': '(%(levelno)d) %(asctime)s %(name)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['handler_django_file'],
            'level': 'INFO',
            'propagate': True
        },
        'apps.happytea': {
            'handlers': ['handler_happytea_file'],
            'level': 'DEBUG',
            'propagate': True
        },
        'apps': {
            'handlers': ['handler_apps_all_file',
                         'handler_apps_err_file',
                         'handler_apps_crontab_file',
                         'handler_console'],
            'level': 'DEBUG',
            'propagate': True
        }
    },
    'filters': {
        'cmd_filter': {
            '()': 'lib.logfilter.CmdFilter'
        },
        'crontab_filter': {
            '()': 'lib.logfilter.CrontabFilter'
        }
    },
    'handlers': {
        'handler_happytea_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'fmt_simple',
            'filename': '/data/website/logs/happytea.log',
            'mode': 'a',
            'maxBytes': 1 * 1024 * 2014,
            'backupCount': 5,
            'level': 'DEBUG'
        },
        'handler_django_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'fmt_detail',
            'filename': '/data/website/logs/django.log',
            'mode': 'a',
            'maxBytes': 1 * 1024 * 2014,
            'backupCount': 5,
            'level': 'DEBUG'
        },
        'handler_apps_all_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'fmt_simple',
            'filename': '/data/website/logs/apps_all.log',
            'mode': 'a',
            'maxBytes': 1 * 1024 * 2014,
            'backupCount': 5,
            'level': 'DEBUG'
        },
        'handler_apps_crontab_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'fmt_simple',
            'filename': '/data/website/logs/apps_crontab.log',
            'mode': 'a',
            'maxBytes': 1 * 1024 * 2014,
            'backupCount': 2,
            'filters': ['crontab_filter'],
            'level': 'INFO'
        },
        'handler_apps_err_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'fmt_detail',
            'filename': '/data/website/logs/apps_error.log',
            'mode': 'a',
            'maxBytes': 1 * 1024 * 2014,
            'backupCount': 5,
            'level': 'ERROR'
        },
        'handler_mail_admins': {
            'level': 'ERROR',
            'email_backend': 'django.core.mail.backends.smtp.EmailBackend',
            'formatter': 'fmt_detail',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': False
        },
        'handler_console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'fmt_simple',
            'filters': ['cmd_filter']
        }
    }
}

# email config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = user_config.UC_EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = user_config.UC_EMAIL_HOST_PASSWORD
EMAIL_SUBJECT_PREFIX = '[wx_website]'
EMAIL_USE_TLS = False
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER

# system admin
ADMINS = user_config.UC_ADMINS
MANAGERS = ADMINS

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# define global vars
G_WX_ID = 2
